package days02;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Iterator;

import org.doit.domain.EmpDeptSalgradeVO;
import org.doit.domain.EmpVO;
import org.doit.domain.SalgradeVO;

import com.util.DBConn;

/**
 * @author msg
 * @date 2025. 4. 15. -오후 12:22:30
 * @Subject
 * @Content
 */
public class Ex07 {
	/*
	[실행결과]
	1등급   (     700~1200 ) - 2명                        
	2등급   (   1201~1400 ) - 2명
	3등급   (   1401~2000 ) - 2명
	4등급   (   2001~3000 ) - 4명
	5등급   (   3001~9999 ) - 1명   
			 */   
	public static void main(String[] args) {
		// SalgradeVO.java
		String sql = "select grade, losal, hisal, count(*) cnt"
				+ " From salgrade s join emp e on e.sal BETWEEN losal and hisal"
				+ " group by grade, losal, hisal"
				+ " Order by grade ASC ";
		
		ArrayList<SalgradeVO> list = null;
		
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		
		int grade, losal, hisal, cnt;
		
		SalgradeVO vo = null;
			
	
		try {
			conn = DBConn.getConnection(); 
			stmt = conn.createStatement();
			rs = stmt.executeQuery(sql);
			
			if (rs.next()) {
				list = new ArrayList<>();
				do {
					grade = rs.getInt("grade");
					losal = rs.getInt("losal");
					hisal = rs.getInt("hisal");
					cnt  = rs.getInt("cnt");
					vo = new SalgradeVO(grade, losal, hisal, cnt);
					list.add(vo);
					// 출력
					System.out.printf("%d등급   ( %d ~ %d ) - %d명\n", grade, losal, hisal, cnt );

				} while (rs.next());
				
				
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
		}finally {
			if (rs != null)
				try {
					rs.close();
					if (stmt != null) stmt.close();
						DBConn.close(); // 4
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		
		
	}
}
	
	
	/*
//	public static void main(String[] args) {
//	

//		
//		Connection conn = null;
//		Statement stmt = null;
//		ResultSet rs = null;
//		
//		String sql = "select empno, ename, dname, sal+NVL(comm,0) pay, grade, losal, hisal, job, deptno"
//				+ " from emp e left join dept d on e.deptno = d.deptno"
//				+ "            join salgrade s ON e.sal BETWEEN s.losal AND s.hisal";
//		
//		String maxSql = "select max(grade)"
//						+ "	from salgrade";
//
//		int grade;
//		int losal, hisal;
//		int cnt;
//		
//		int deptno;
//		String job;
//		int empno;
//		String ename;
//		double pay;
//		String dname;
//		
//		conn = DBConn.getConnection();
//		
//		ArrayList<ArrayList<EmpDeptSalgradeVO>> llist = null;
//		ArrayList<EmpDeptSalgradeVO> list = null;
//		EmpDeptSalgradeVO vo = null;
//		
//		try {
//			stmt = conn.createStatement();
//			rs = stmt.executeQuery(sql);
//
//			if (rs.next()) {
//				llist = new ArrayList();
//			
//					do {
//						list = new ArrayList();
//						
//						grade = rs.getInt("grade");
//						losal = rs.getInt("losal");
//						hisal = rs.getInt("hisal");
//						deptno = rs.getInt("deptno");
//						empno = rs.getInt("empno");
//						job = rs.getString("job");
//						ename = rs.getString("ename");
//						pay = rs.getDouble("pay");
//						dname = rs.getString("dname");					
//						
//						EmpDeptSalgradeVO.builder().grade(grade).losal(losal).hisal(hisal).deptno(deptno)
//						.ename(ename).pay(pay).dname(dname).job(job);
//						
//						for (int i = 0; i < llist.size(); i++) {
//							if (llist.isEmpty() || llist.get(i).get(8)!= deptno) {
//								
//						} // for
//							
//						} // if
//						list.add(vo);
//					} while (rs.next());
//					
//				} // if
//
//		
//			
//			for (int i = 0; i < list.size(); i++) {
//				System.out.printf("%d등급   ( %d ~ %d ) - %d명 ", list.get(i).getGrade(), list.get(i).getLosal()
//																,list.get(i).getHisal(), list.get(i));
//				
//			} // for
//
//		} catch (SQLException e) {
//			e.printStackTrace();
//		}
//		
//		
//		
//
//	} // main
//*/

//} //class
